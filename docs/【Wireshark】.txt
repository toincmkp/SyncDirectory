【Wireshark】

------概要------

ネットワークアナライザ
自身の端末のパケットの送受信のやり取りを視認できる
またUSBを接続した際のUSBとのデータのやり取りも確認できる


------事前知識------

パケットについて(全てパケットと呼ばれる)
　フレーム
　　→イーサネットを流れるデータの固まり

　データグラム
　　→フレームの中でIPが扱う固まり

　セグメント
　　→データグラムの中でTCPやUDPの固まり

　※むかしはおそらくこれらの総称はデータユニットだったと思われる
　　そのときはデータグラムに位置するものがパケットであったっぽい


パケットの実際の中身について
　大概のパケットの中身の順番について(というかそれ以外があるのか知らんだけ)

　　Ethernetヘッダ
　　IPヘッダ
　　何かしらのプロトコル
　　データ



------Wiresharkの見方------


パケットリストペイン
　→No.1とかのパケットが並んでる枠

パケット詳細ペイン
　→パケットリストペインの下のFrameとかEhernetとかの枠

パケットバイトペイン
　→16進のバイナリ枠

パケリスのLength
　→パケットの長さ、バイト数



------設定動作------

パケリスの色づけ
　→ツールバー右から三番目

パケットをダブルクリック
　→別ウインドウ化

MACアドレスのベンダ識別子を数字で表示
　→「View」「Name Resolution」「Enable for MAC layer」のチェックをはずす



------表示できる動作内容------

キャプチャーファイルの統計情報
　→今キャプチャー情報

　→「Statistics」「Summary」


プロトコルヒエラルキー
　→プロトコルの割合

　→「Statistics」「Protocol Hierarchy」

　⇒通常と異なる通信が発生していないかを調べる際などに利用可能


フローグラフ
　→縦をノード(IPアドレス)としてデータの流れを表示

　→「Statistics」「Flow Graph...」


一連のセッション内容の表示
　→TCP UDP SSLで可能

　→「知りたいセッション間のパケットを右ｸﾘｯｸ」「Follow TCP(適宜) Stream」

　→この際、メインの方もそのセッションのパケットが表示
　　やめたい場合はフィルターツールバーの「Clear」

　→逆に選択されたパケットをoutしたければ、出てきた画面でFilter Out This Stream

　→データをやりとりしていればそのデータ自体も見れる
　　POSTやGET、Digest認証等の中身もここで見れる



------フィルタリング方法詳細------


ip.src = ip.source
ip.dst = ip.distination


フィルタリング(Source or Destination)
　→「パケットのSourceかDestination上で右ｸﾘｯｸ」「Apply as filter」「selected」


フィルタリング(対話両者間)
　→「パケットのSourceかDestination上で右ｸﾘｯｸ」「Conversation Filter」「(適宜)」


Wiresharkフィルター例
　eth.src == 00:00:00:00:00:00		MACアドレス00:00:00:00:00:00からの送信
　ip.dst == 255.255.255.255		ブロードキャストパケット
　ip.addr == 192.168.1.0/24		IPアドレス192.168.1.0 ～ 192.168.1.255
　!(tcp.port == 80)			TCPポート80以外
  tcp.port == 80 || udp.port == 80	TCPまたはUDPのポート80
  tcp.flags.syn				SYNフラグの付いたTCPパケット
  !dns					DNS以外のプロトコル
　tcp.srcport == 8080			ソースポートが8080
  tcp.dstport == 8080			ディストポートが8080
　http.request				HTTPのリクエスト(要はGET)
  http.responce				HTTPのレスポンス


フィルタリング演算子

　演算子　別表記　意味
    ==　　　eq      一致
    !=      ne　　　不一致
    >       gt　　　より大きい
    <       lt　　　より小さい
    >=      ge　　　以上
    <=      le　　　以下
    &&     and　　　論理積
    ||      or　　　論理和
    !      not      否定


フィルタリング(プロトコル)
　→フィルターツールバーにプロトコル名を入れるだけ
　　(全てのプロトコルでフィルタリングできるわけではない)


キャプチャーする時点でフィルタリング
　→メインツールバーの左から二番目「Show the Capture Options」
    or 「Capture」「Options」
    or 初めのウェルカム画面から「Capture Options」



------その他の動作------

Pcapファイルからファイルの取得
　→「File」「Export」「Object」「HTTP」「(適宜)」


パケットデータの中身(データ部分の取得)
　→「欲しいパケットを右クリック」「Copy」「Bytes」「(適宜)」



----------------------------------------------------
わかることいろいろ


パケットのプロトコル欄に
　MDNSが多ければ
　　→MacやLinuxである可能性が高い

　LLMNRやNBNSといったプロトコルが多ければ
　　→Windows以降である可能性が高い

　⇒いわゆるよく飛び交うプロトコルからOSやなにかしらを判断


--------------------------------------------------------------------------------------------------------
時間あるときにでも全体構成見直しからのまとめ、以下追記

Statistics

　目的：						方法：
　　IPアドレスとドメイン名の関係を知りたい		　Show address resolution
　　利用されているプロトコルの統計を知りたい		　Protocol Hierarchy
　　どの端末がどの端末と通信して以下の統計を知りたい	　Conversations
　　どのような端末が通信しているかの統計を知りたい	　Endpoints

